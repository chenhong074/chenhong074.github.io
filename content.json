{"meta":{"title":"秋色遇见🐈","subtitle":"","description":null,"author":"秋色遇见🐈","url":"http://example.com","root":"/"},"pages":[{"title":"标签","date":"2020-11-28T12:36:37.835Z","updated":"2020-11-28T12:36:37.835Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"jottings","date":"2020-11-29T16:00:00.000Z","updated":"2020-12-03T07:23:52.517Z","comments":true,"path":"jottings/index.html","permalink":"http://example.com/jottings/index.html","excerpt":"","text":""},{"title":"About | 关于我","date":"2020-12-03T08:36:05.221Z","updated":"2020-12-03T08:36:05.221Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"About Me秋色遇见 🐈 一枚前端萌新，大学就读于武汉某个不知名院校，现已投身于前端开发领域。 喜欢养狗 / 旅游 / 看书，谈不上多热爱编程，但信奉生命在于折腾。 不入流程序员一枚，目前混迹在北方某个城市。 中国很大，世界更大，梦想成为一名优秀的人，可以去看看这世界。 Contacts E-Mail: &#x63;&#x68;&#101;&#110;&#102;&#97;&#x69;&#x72;&#121;&#64;&#121;&#x65;&#x61;&#x68;&#x2e;&#x6e;&#x65;&#x74; WeChat: chenfairyer QQ: 707949547 GitHub: chenhong074 Keywords All at sea. 但希望能成为一个有趣的人。 估计五年之内也成不了什么事，平庸之人而已。 小时候没见过什么世面，长大后总想去更多更远的地方。 梦想有自己的花店或者宠物店，可以种花种草，养狗养猫，孤独终老。 关于自己的生活，我和你都不是读者，而是作者，至少结局，还是能自己说了算的。"},{"title":"标签","date":"2020-11-28T12:37:17.413Z","updated":"2020-11-28T12:37:17.413Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"表格 + 柱状图","slug":"表格 + 柱状图","date":"2020-12-03T16:00:00.000Z","updated":"2020-12-04T05:36:53.483Z","comments":true,"path":"2020/12/04/表格 + 柱状图/","link":"","permalink":"http://example.com/2020/12/04/%E8%A1%A8%E6%A0%BC%20+%20%E6%9F%B1%E7%8A%B6%E5%9B%BE/","excerpt":"vue+element+echarts 柱状图+表格","text":"vue+element+echarts 柱状图+表格 11111111111111111111111111","categories":[],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://example.com/tags/Vue/"},{"name":"Echarts","slug":"Echarts","permalink":"http://example.com/tags/Echarts/"}]},{"title":"我尤其的想你","slug":"我尤其的想你","date":"2020-12-02T16:00:00.000Z","updated":"2020-12-04T05:30:57.237Z","comments":true,"path":"2020/12/03/我尤其的想你/","link":"","permalink":"http://example.com/2020/12/03/%E6%88%91%E5%B0%A4%E5%85%B6%E7%9A%84%E6%83%B3%E4%BD%A0/","excerpt":"多喜乐，长安宁","text":"多喜乐，长安宁 我尤其的想你，在这样的深夜，在这样的季节。看着窗外霓虹灯闪烁，回忆也连带着飘远。 我曾问过你，你喜欢白天还是夜晚？你说你既喜欢白天的热闹，又喜欢夜晚的宁静。可我知道，你讨厌白天的虚伪，也厌烦夜晚的孤单。你总是这样，不愿意将真实的想法告诉别人，你说所有人都不会对别人的想法感同身受，我点点头，表示理解。 你是从什么时候开始学着像个大人的？我闭上眼睛冥想，或许是你从小就不在父母身边，寄人篱下，太早的学会了察言观色，活的敏感又脆弱，觉得自己必须听话才能被喜欢；抑或是你在从那之后人生中的每个阶段，都被逼着独立、坚强。我问你，你有没有怪过生活？你低头想了想，笑了笑说：“放过自己，也放过生活”。 你总这样，有的时候，我真的不懂你，我再次坚定的看向你，问道：“放过生活，生活就能放过你吗？”这一次，你没有笑，而是看向窗外，好一会儿才说：“生活能不能放过自己不重要，重要的是自己已不再纠结，放平心境，无谓得失，即便计较，也计较得磊落，起码无愧于心”。我看着你，觉得自己懂了你，又好像不懂你。 你小的时候，也曾让春雨浸润双眼，被阳光染上明媚，笑靥如花，意气风发，成长的路上你曾活的那么潇洒肆意，可是渐渐的你开始在意别人的看法，遵照别人的目光生活，不再张扬、懂得谦让。那个时候，我就问过你，怎么不跟随自己的内心生活呢？你说世界多样，你不想独树一帜。 我曾不止一遍的问你，你开心吗？你离开天津去老家念书那天，在车上，你回答我“自由”就会让你开心，可是后来，我不止一次的见过你躲在被窝里哭，想家、想朋友。你在离开武汉去福建实习的火车上，我再次问你，你回答我，“独立”就会让你开心，可是后来，刚出社会的不适应，工作的琐事，爱情的烦恼，让你在深夜一次又一次失眠。你辞职从福建准备回天津找工作那天，我又一次问你，你说，“回家”能让你安心。这一次，你连快乐两个字，都没提。 这么多年，我看着你乖巧听话讨好所有人的模样，不是心疼，是无奈。你总说你的理想是做你自己，不为谁所困，不为事所绊，可是你的每一天，却偏偏都不是你自己。我刚刚问你：“你想做的那个自己，到底是什么样子？”你半晌才回答：“已经模糊了”， 我想，你一定很难过吧。 我尤其的想你，在这个深夜，想念那个明媚的你，心之所向，一往无前。你现在这种不动声色的样子，让我觉得，既可爱又讨庆。","categories":[{"name":"随笔","slug":"随笔","permalink":"http://example.com/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[]},{"title":"同时配置两个SSH","slug":"同时配置两个SSH","date":"2020-11-29T16:00:00.000Z","updated":"2020-12-04T05:30:18.712Z","comments":true,"path":"2020/11/30/同时配置两个SSH/","link":"","permalink":"http://example.com/2020/11/30/%E5%90%8C%E6%97%B6%E9%85%8D%E7%BD%AE%E4%B8%A4%E4%B8%AASSH/","excerpt":"同时配置 GitLab 和 GitHub 的 SSH","text":"同时配置 GitLab 和 GitHub 的 SSH 场景: 公司有自己的 GitLab，公司代码都是提交到这上面 自己平时学习的时候，代码是提交到 GitHub为了同时支持这两种操作，一台电脑需要为不同的网站创建单独的 key 配置步骤1.配置公司的 GitLab1.1 git 输入如下命令，生成密钥 ssh，一路回车即可 1ssh-keygen -t rsa -C “yourgitlab@email.com” //GitLab的邮箱 这个我们选择生成在默认文件 id_rsa.pub（我的是 Mac，默认在~/.ssh 里面，Windows 在 C:\\Users\\xxxx.ssh 文件下） 1.2 打开 iid_rsa.pub 文件，复制里面的内容粘贴到 GitLab 的密钥配置中 1.3 输入命令 ssh -T git@gitlab 域名.com 查看是否配置成功，成功显示如下: 1ssh -T git@gitlab 域名.com 或者简单粗暴直接 clone 工程，选择直接 clone，要先索引到要 clone 的目录下，命令 git clone &#103;&#105;&#116;&#64;&#103;&#105;&#x74;&#x6c;&#x61;&#98;&#46;&#x63;&#x6f;&#109;:xxx/xxx.git 2.配置自己的 GitHub1.1 git 命令生成密钥 ssh 并直接命名（此时不是默认文件），一路回车即可 如果你之前已经生成过该名字的密钥想更改，就在第二步提示填写 yes，就会覆盖以前的 1ssh-keygen -t rsa -C “yourgithub@email.com” -f github_id-rsa //GitHub的邮箱 1.2 查看文件，将 github_id-rsa.pub 文件里的密钥 ssh 粘贴到 GitHub 中 3.创建一个 config 文件来管理公钥和私钥 123cd ~/.ssh/touch configvim config 4.配置 config 文件 1234567891011#GitLabhost yourgitlab域名.com Hostname yourgitlab域名.com User git IdentityFile ~/.ssh/gitlab_id-rsa (gitlab的ssh，也可是默认的id_rsa)Host GitHub.com Hostname ssh.github.com Port 443 User git IdentityFile ~/.ssh/github_id-rsa (github的ssh) 5.删除缓存的秘钥（这一步非必须，比如是刚刚安装 git 的） 1ssh-add -D 6.如果显示如下信息:Could not open a connection to your authentication agent. 执行 eval $(ssh-agent) 然后重新执行第 5 步 1eval $(ssh-agent) 如果没有报错的话，那么可以执行下面一条命令，让 ssh-agent 知道你有这么个 key 1ssh-add ~/.ssh/github_id-rsa 7.输入命令查看是否配置成功，，成功显示如下: 1ssh -T git@github.com 或者简单粗暴直接 clone 工程 这样一台电脑就已经成功配置了 GitLab 以及 GitHub 两个 SSH 啦","categories":[{"name":"前端","slug":"前端","permalink":"http://example.com/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"GitLab","slug":"GitLab","permalink":"http://example.com/tags/GitLab/"},{"name":"GitHub","slug":"GitHub","permalink":"http://example.com/tags/GitHub/"}]},{"title":"Hexo搭建个人博客","slug":"Hexo搭建个人博客","date":"2020-11-27T16:00:00.000Z","updated":"2020-12-04T05:31:23.696Z","comments":true,"path":"2020/11/28/Hexo搭建个人博客/","link":"","permalink":"http://example.com/2020/11/28/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","excerpt":"自己搭建博客的过程，压根不止十分钟","text":"自己搭建博客的过程，压根不止十分钟 有了简书，CSDN，博客园这类东西后，为什么还需要个人博客呢，除了装逼，当然还有个人博客更加自由，不受任何第三方管理，并且还能够自定义成自己喜欢的样子。还有，如果你是个程序猿，那就更没有理由不自己搭建一个独立博客了。 1.创建 Github 域名和空间1.1 注册首先你需要注册一个 Github 账号，已有的可以跳过这一步下翻去 1.2 创建仓库，注意 username，这会影响到你的域名，你的域名将会是 http://username.github.io ，所以认真的取个名字吧。注册过程中可能需要验证你的邮箱，其他就不在赘述 1.2 创建仓库然后需要创建一个仓库(repository)来存储我们的网站，点击首页任意位置出现的 New 按钮创建仓库, Respository name 中的 username.github.io 的 username 一定与前面的 Owner 一致，记住你的 username 下面会用到点击 Create reponsitory ，到这第一步就已经完成了，下面是安装。 2.安装Hexo 可以说是目前最流行的博客框架了，基于 Nodejs，更多信息可以 google，下面需要安装的工具包括 Git，Nodejs，Hexo2.1 安装 GitGit 下载网址https://git-scm.com/download/win Git 安装教程https://www.jianshu.com/p/bebba0d8038e安装好后，用 git version 来查看一下版本 1git version 2.2 安装 nodeNode 下载网址https://nodejs.org/zh-cn/download/package-manager/ 安装完后，打开命令行输入 node -v 可以检查是否安装成功 1node -v 2.3 安装 hexo可以先创建一个 blog 文件夹，然后 cd 到这个文件夹下输入命令 1npm install -g hexo-cli 依旧用 hexo -v 查看一下是否安装成功 1hexo -v 至此就全部安装完了，接下来初始化一下 hexo 1hexo init myblog 这个 myblog 可以自己取什么名字都行，然后进入这个 myblog 文件夹 12cd myblognpm install 新建完成后，指定文件夹目录下有： node_modules: 依赖包 public：存放生成的页面 scaffolds：生成文章的一些模板 source：用来存放你的文章 themes：主题 _config.yml: 博客的配置文件 123hexo c //hexo clean的简写 清除所有记录hexo g //hexo generate的简写 生成静态网页hexo s //hexo server的简写 启动服务 现在在浏览器输入 localhost:4000 就可以打开我们的博客界面，是不是有点鸡冻！别急，我们还需要把页面推送到 Github Pages 上 3.推送到 Github Pages3.1 设置 Git 的 user name 和 email打开命令行分别输入 12git config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot; 3.2 SSH 授权打开命令行，输入 ssh-keygen -t rsa， 接着回车三下，会得到了两个文件：id_rsa 和 id_rsa.pub 1ssh-keygen -t rsa 登录 Github，点击头像下的 settings，添加 ssh。新建一个 new ssh key，将 id_rsa.pub 文件里的内容复制上去 3.3 上传项目先来看它的文档目录： _config.yml：网站的全局配置文件，设置包括网站标题、副标题、作者、关键字和描述信息等 package.json：框架的基本参数信息和它所依赖的插件 scaffolds：模板文件夹 source：存储一些直接来自用户的文件，它很重要，如果不出意外文章就是保存在这个文件夹下(_posts)。_posts 目录下的 md 文件，会被编译成 html 文件，放到 public 文件下 public：在初始化后是没有 public 文件夹的，除非 hexo g 编译生成静态文件后，public 文件夹会自动生成 themes：主题文件夹，存储主题，相关的主题可以在 Github 上免费采购。 .gitignore：声明不被 git 记录的文件 打开配置文档_config.yml，修改 deploy 值（在末尾）:注意：冒号后面要敲一个空格 1234deploy: type: git repo: git@github.com:chenhong074/chenhong074.github.io.git branch: master 安装 hexo-deployer-git 自动部署发布工具 1npm install hexo-deployer-git --save 在浏览器中输入 https://localhost:4000 启动测试服务，测试没问题后，就生成静态网页文件发布至我们的 Github pages 中 123hexo cleanhexo ghexo d 如果这是你的第一次，终端会让你输入 Github 的邮箱和密码，正确输入后，稍等片刻，就会把你的博客上传至 Github 了。以后在每次把博客写完后，执行一下这个命令就可以直接发布 恭喜你能走到这一步，你的博客已经搭建完成了，在浏览器中输入 http://chenhong074.github.io 就能够正常访问啦！ 4.更换 Hexo 主题由于默认的博客主题可能不能满足大家的需求，所以再提一下更换主题的方法首先到Hexo 官网中选择一款喜欢的主题，这里我以我博客采用的主题为例，我采用的 pure 主题，首先在 Hexo 系统文件夹中打开终端，然后输入 1git clone https://github.com/izhaoo/hexo-theme-zhaoo.git themes/pure 之后在系统目录 theme 文件夹下你会发现多出了 zhaoo 命名的一个文件夹，这就是我们主题保存的位置,其中 pure 文件夹下的 config.yml 文件就是我们博客的配置文件，在里面可以自己对博客界面进行个性化配置，详情请参看配置文档 接下来在我们的 Hexo 系统配置文件 config.yml 中，修改 theme 为我们的 pure 主题注意：theme 后的主题名称必须和 theme 文件夹下的文件夹名称一样，否则页面会变成一片空白 1theme: pure 然后重新生成博客静态文件，部署到 Github Pages 12hexo ghexo d 当当当 ~ 我们的个性化博客就搭建完毕啦！","categories":[{"name":"前端","slug":"前端","permalink":"http://example.com/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://example.com/tags/Hexo/"},{"name":"博客","slug":"博客","permalink":"http://example.com/tags/%E5%8D%9A%E5%AE%A2/"}]}],"categories":[{"name":"随笔","slug":"随笔","permalink":"http://example.com/categories/%E9%9A%8F%E7%AC%94/"},{"name":"前端","slug":"前端","permalink":"http://example.com/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://example.com/tags/Vue/"},{"name":"Echarts","slug":"Echarts","permalink":"http://example.com/tags/Echarts/"},{"name":"GitLab","slug":"GitLab","permalink":"http://example.com/tags/GitLab/"},{"name":"GitHub","slug":"GitHub","permalink":"http://example.com/tags/GitHub/"},{"name":"Hexo","slug":"Hexo","permalink":"http://example.com/tags/Hexo/"},{"name":"博客","slug":"博客","permalink":"http://example.com/tags/%E5%8D%9A%E5%AE%A2/"}]}